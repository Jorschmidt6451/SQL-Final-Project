CREATE TABLE department (
    dept_id SERIAL PRIMARY KEY,
    dept_name VARCHAR(100) NOT NULL
);

CREATE TABLE position (
    position_id SERIAL PRIMARY KEY,
    position_name VARCHAR(100) NOT NULL
);

CREATE TABLE store (
    store_id SERIAL PRIMARY KEY,
    store_name VARCHAR(100) NOT NULL
    state VARCHAR(20) NOT NULL,
    city VARCHAR(50) NOT NULL,
    street VARCHAR(50) NOT NULL,
    ZIP VARCHAR(10) NOT NULL,
);

CREATE TABLE employee (
    employee_id SERIAL PRIMARY KEY,
    store_id INT NOT NULL,
    dept_id INT NOT NULL,
    position_id INT NOT NULL,
    employee_type INT NOT NULL,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    phone_number VARCHAR(12) NOT NULL,
    state VARCHAR(20) NOT NULL,
    city VARCHAR(50) NOT NULL,
    street VARCHAR(50) NOT NULL,
    ZIP VARCHAR(10) NOT NULL,
    hire_date DATE NOT NULL,
    CONSTRAINT fk_store FOREIGN KEY (store_id) REFERENCES store(store_id),
    CONSTRAINT fk_dept FOREIGN KEY (dept_id) REFERENCES deparment(dept_id),
    CONSTRAINT fk_position FOREIGN KEY (position_id) REFERENCES position(position_id)
);

-- Payroll table
CREATE TABLE payroll (
    payroll_id SERIAL PRIMARY KEY,
    employee_id INT NOT NULL,
    pay_period_start DATE NOT NULL,
    pay_period_end DATE NOT NULL,
    total_hours_worked INT NOT NULL,
    hour_wage INT NOT NULL,
    CONSTRAINT fk_employee_payroll FOREIGN KEY (employee_id) REFERENCES employee(employee_id)
);

-- Employee Schedule table
CREATE TABLE employee_schedule (
    schedule_id SERIAL PRIMARY KEY,
    employee_id INT NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    CONSTRAINT fk_employee_schedule FOREIGN KEY (employee_id) REFERENCES employee(employee_id) 
        ON DELETE CASCADE ON UPDATE CASCADE
);

-- Employee Time Tracking table
CREATE TABLE employee_time_tracking (
    time_tracking_id SERIAL PRIMARY KEY,
    employee_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP,
    total_hours_worked INT GENERATED ALWAYS AS (
        EXTRACT(EPOCH FROM (end_time - start_time)) / 3600
    ) STORED,
    CONSTRAINT fk_employee_time_tracking FOREIGN KEY (employee_id) REFERENCES employee(employee_id),
    CONSTRAINT fk_schedule_time_tracking FOREIGN KEY (schedule_id) REFERENCES employee_schedule(schedule_id)
);

