-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.customer_reviews
(
    review_id serial NOT NULL,
    customer_id integer NOT NULL,
    store_id integer,
    product_id integer,
    rating integer NOT NULL,
    review_text text COLLATE pg_catalog."default",
    review_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT customer_reviews_pkey PRIMARY KEY (review_id)
);

CREATE TABLE IF NOT EXISTS public.customers
(
    customer_id serial NOT NULL,
    first_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    phone_number character varying(15) COLLATE pg_catalog."default",
    date_joined timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT customers_pkey PRIMARY KEY (customer_id),
    CONSTRAINT customers_email_key UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.deliveries
(
    delivery_id serial NOT NULL,
    product_id integer NOT NULL,
    vendor_id integer NOT NULL,
    store_id integer NOT NULL,
    delivery_date date NOT NULL,
    quantity integer NOT NULL,
    CONSTRAINT deliveries_pkey PRIMARY KEY (delivery_id)
);

CREATE TABLE IF NOT EXISTS public.department
(
    dept_id serial NOT NULL,
    dept_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT department_pkey PRIMARY KEY (dept_id)
);

CREATE TABLE IF NOT EXISTS public.employee
(
    employee_id serial NOT NULL,
    store_id integer NOT NULL,
    dept_id integer NOT NULL,
    position_id integer NOT NULL,
    first_name character varying(30) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(30) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    phone_number character varying(15) COLLATE pg_catalog."default" NOT NULL,
    state character varying(20) COLLATE pg_catalog."default" NOT NULL,
    city character varying(50) COLLATE pg_catalog."default" NOT NULL,
    street character varying(100) COLLATE pg_catalog."default" NOT NULL,
    zip character varying(10) COLLATE pg_catalog."default" NOT NULL,
    hire_date date NOT NULL,
    CONSTRAINT employee_pkey PRIMARY KEY (employee_id)
);

CREATE TABLE IF NOT EXISTS public.employee_schedule
(
    schedule_id serial NOT NULL,
    employee_id integer NOT NULL,
    start_time timestamp without time zone,
    end_time timestamp without time zone,
    CONSTRAINT employee_schedule_pkey PRIMARY KEY (schedule_id)
);

CREATE TABLE IF NOT EXISTS public.employee_time_tracking
(
    time_tracking_id serial NOT NULL,
    employee_id integer NOT NULL,
    start_time timestamp without time zone NOT NULL,
    end_time timestamp without time zone,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT employee_time_tracking_pkey PRIMARY KEY (time_tracking_id)
);

CREATE TABLE IF NOT EXISTS public.inventory
(
    inventory_id serial NOT NULL,
    store_id integer NOT NULL,
    product_id integer NOT NULL,
    quantity integer NOT NULL DEFAULT 0,
    last_updated timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT inventory_pkey PRIMARY KEY (inventory_id)
);

CREATE TABLE IF NOT EXISTS public.payroll
(
    payroll_id serial NOT NULL,
    employee_id integer NOT NULL,
    pay_period_start date NOT NULL,
    pay_period_end date NOT NULL,
    hour_wage numeric(10, 2) NOT NULL,
    CONSTRAINT payroll_pkey PRIMARY KEY (payroll_id)
);

CREATE TABLE IF NOT EXISTS public."position"
(
    position_id serial NOT NULL,
    position_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT position_pkey PRIMARY KEY (position_id)
);

CREATE TABLE IF NOT EXISTS public.price_history
(
    history_id serial NOT NULL,
    product_id integer NOT NULL,
    store_id integer,
    price numeric(10, 2) NOT NULL,
    effective_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT price_history_pkey PRIMARY KEY (history_id)
);

CREATE TABLE IF NOT EXISTS public.product_waste
(
    waste_id serial NOT NULL,
    product_id integer NOT NULL,
    store_id integer NOT NULL,
    dept_id integer,
    quantity integer NOT NULL,
    waste_reason character varying(255) COLLATE pg_catalog."default" NOT NULL,
    waste_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT product_waste_pkey PRIMARY KEY (waste_id)
);

CREATE TABLE IF NOT EXISTS public.products
(
    product_id serial NOT NULL,
    dept_id integer,
    vendor_id integer,
    brand character varying(50) COLLATE pg_catalog."default",
    product_name character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT products_pkey PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS public.sales
(
    sale_id serial NOT NULL,
    transaction_id integer NOT NULL,
    product_id integer NOT NULL,
    quantity integer NOT NULL,
    CONSTRAINT sales_pkey PRIMARY KEY (sale_id)
);

CREATE TABLE IF NOT EXISTS public.store
(
    store_id serial NOT NULL,
    store_name character varying(100) COLLATE pg_catalog."default",
    state character varying(20) COLLATE pg_catalog."default",
    city character varying(50) COLLATE pg_catalog."default",
    street character varying(50) COLLATE pg_catalog."default",
    zip character varying(10) COLLATE pg_catalog."default",
    CONSTRAINT store_pkey PRIMARY KEY (store_id)
);

CREATE TABLE IF NOT EXISTS public.transactions
(
    transaction_id serial NOT NULL,
    store_id integer NOT NULL,
    transaction_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    transaction_type integer NOT NULL DEFAULT 1,
    CONSTRAINT transactions_pkey PRIMARY KEY (transaction_id)
);

CREATE TABLE IF NOT EXISTS public.vendors
(
    vendor_id serial NOT NULL,
    vendor_name character varying(20) COLLATE pg_catalog."default" NOT NULL,
    phone_number character varying(12) COLLATE pg_catalog."default",
    email character varying(50) COLLATE pg_catalog."default",
    website character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT vendors_pkey PRIMARY KEY (vendor_id),
    CONSTRAINT vendors_vendor_name_key UNIQUE (vendor_name)
);

ALTER TABLE IF EXISTS public.customer_reviews
    ADD CONSTRAINT fk_customer_reviews FOREIGN KEY (customer_id)
    REFERENCES public.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.customer_reviews
    ADD CONSTRAINT fk_product_reviews FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.customer_reviews
    ADD CONSTRAINT fk_store_reviews FOREIGN KEY (store_id)
    REFERENCES public.store (store_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.deliveries
    ADD CONSTRAINT fk_product_deliveries FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.deliveries
    ADD CONSTRAINT fk_store_deliveries FOREIGN KEY (store_id)
    REFERENCES public.store (store_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.deliveries
    ADD CONSTRAINT fk_vendor_deliveries FOREIGN KEY (vendor_id)
    REFERENCES public.vendors (vendor_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.employee
    ADD CONSTRAINT fk_dept FOREIGN KEY (dept_id)
    REFERENCES public.department (dept_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.employee
    ADD CONSTRAINT fk_position FOREIGN KEY (position_id)
    REFERENCES public."position" (position_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.employee
    ADD CONSTRAINT fk_store FOREIGN KEY (store_id)
    REFERENCES public.store (store_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.employee_schedule
    ADD CONSTRAINT fk_employee_schedule FOREIGN KEY (employee_id)
    REFERENCES public.employee (employee_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.employee_time_tracking
    ADD CONSTRAINT fk_employee_time_tracking FOREIGN KEY (employee_id)
    REFERENCES public.employee (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.inventory
    ADD CONSTRAINT fk_product_inventory FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.inventory
    ADD CONSTRAINT fk_store_inventory FOREIGN KEY (store_id)
    REFERENCES public.store (store_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.payroll
    ADD CONSTRAINT fk_employee_payroll FOREIGN KEY (employee_id)
    REFERENCES public.employee (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.price_history
    ADD CONSTRAINT fk_product_price_history FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.price_history
    ADD CONSTRAINT fk_store_price_history FOREIGN KEY (store_id)
    REFERENCES public.store (store_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_waste
    ADD CONSTRAINT fk_dept_waste FOREIGN KEY (dept_id)
    REFERENCES public.department (dept_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_waste
    ADD CONSTRAINT fk_product_waste FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_waste
    ADD CONSTRAINT fk_store_waste FOREIGN KEY (store_id)
    REFERENCES public.store (store_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT fk_dept_products FOREIGN KEY (dept_id)
    REFERENCES public.department (dept_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT fk_vendor_products FOREIGN KEY (vendor_id)
    REFERENCES public.vendors (vendor_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.sales
    ADD CONSTRAINT fk_product_sales FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.sales
    ADD CONSTRAINT fk_transaction_sales FOREIGN KEY (transaction_id)
    REFERENCES public.transactions (transaction_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transactions
    ADD CONSTRAINT fk_store_transactions FOREIGN KEY (store_id)
    REFERENCES public.store (store_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;
